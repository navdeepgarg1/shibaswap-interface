{"version":3,"file":"sdk.cjs.development.js","sources":["../src/constants.ts","../src/errors.ts","../src/utils.ts","../src/entities/currency.ts","../src/entities/token.ts","../src/entities/fractions/fraction.ts","../src/entities/fractions/currencyAmount.ts","../src/entities/fractions/tokenAmount.ts","../src/entities/fractions/price.ts","../src/entities/pair.ts","../src/entities/route.ts","../src/entities/fractions/percent.ts","../src/entities/trade.ts","../src/router.ts","../src/fetcher.ts"],"sourcesContent":["import JSBI from 'jsbi'\n\n// exports for external consumption\nexport type BigintIsh = JSBI | bigint | string\n\nexport enum ChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GÖRLI = 5,\n  KOVAN = 42,\n  MATIC = 137,\n  MATIC_TESTNET = 80001,\n  FANTOM = 250,\n  FANTOM_TESTNET = 4002,\n  XDAI = 100,\n  BSC = 56,\n  BSC_TESTNET = 97,\n  ARBITRUM = 79377087078960,\n  MOONBASE = 1287,\n  AVALANCHE = 43114,\n  FUJI = 43113,\n  HECO = 128,\n  HECO_TESTNET = 256,\n  HARMONY = 1666600000,\n  HARMONY_TESTNET = 1666700000,\n  PUPPYNET = 917\n}\n\nexport enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n\nexport enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n\n// TODO REMOVE\nexport const INIT_CODE_HASH: string = '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303'\n// TODO GOLIVE\nexport const SHIBA_CODE_HASH: string = '0x65d1a3b1e46c6e4f1be1ad5f99ef14dc488ae0549dc97db9b30afe2241ce1c7a'\n// TODO REMOVE\nexport const SUSHI_FACTORY_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\n  [ChainId.ROPSTEN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.RINKEBY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.GÖRLI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.KOVAN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.MATIC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.XDAI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.BSC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.BSC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5',\n  [ChainId.AVALANCHE]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FUJI]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HECO_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PUPPYNET] : '0xc35DADB65012eC5796536bD9864eD8773aBc74C4'\n}\n\nexport const SHIBASWAP_FACTORY_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x115934131916C8b277DD010Ee02de363c09d037c',\n  [ChainId.ROPSTEN]: '0x1DFA4F89acD5cc33A100AD1347970bA9E91737Cb',\n  [ChainId.RINKEBY]: '0x115934131916C8b277DD010Ee02de363c09d037c',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x4fa1932a7fd78C2446842dc00567bFF1D192DB07',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x4fa1932a7fd78C2446842dc00567bFF1D192DB07'\n}\n\n\nexport const SHIBASWAP_ROUTER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x03f7724180AA6b939894B5Ca4314783B0b36b329',\n  [ChainId.RINKEBY]: '0x03f7724180AA6b939894B5Ca4314783B0b36b329',\n  [ChainId.ROPSTEN]: '0x4B0d61C160572CAcC0A20D2dbeF6E0138bf58681',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xbe2B7BC93EF34994E5d7342cF3c8cC9f1fd51109',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0xbe2B7BC93EF34994E5d7342cF3c8cC9f1fd51109'\n}\n\n\nexport const SHIBASWAP_BONE_TOKEN_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x9813037ee2218799597d83D4a5B6F3b6778218d9',\n  [ChainId.ROPSTEN]: '0xD514244ED479A2050c44B448Ec681FaADd8c7429',\n  [ChainId.RINKEBY]: '0x9813037ee2218799597d83D4a5B6F3b6778218d9',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x6d4bB7b0559Aebfc55A42cFEAAeb287c01a7f244',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x6d4bB7b0559Aebfc55A42cFEAAeb287c01a7f244'\n}\n\n\nexport const SHIBASWAP_BURY_BONE_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0xf7A0383750feF5AbaCe57cc4C9ff98e3790202b3',\n  [ChainId.ROPSTEN]: '0x06C2c70e62F74e7d52a5D49375F86a0773269d2B',\n  [ChainId.RINKEBY]: '0xf7A0383750feF5AbaCe57cc4C9ff98e3790202b3',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x0306c12Bf48ccB3031eef5EFF335d468a40dd6a5',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x0306c12Bf48ccB3031eef5EFF335d468a40dd6a5'\n}\n\n\nexport const SHIBASWAP_BURY_LEASH_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0xa57D319B3Cf3aD0E4d19770f71E63CF847263A0b',\n  [ChainId.ROPSTEN]: '0x08a200091c55086a8064DbC4bbC0bea1DC338956',\n  [ChainId.RINKEBY]: '0xa57D319B3Cf3aD0E4d19770f71E63CF847263A0b',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x1309B57240BD3A93750806E3d73aa30b3a6885E2',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x1309B57240BD3A93750806E3d73aa30b3a6885E2'\n}\n\n\nexport const SHIBASWAP_BURY_SHIB_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0xB4a81261b16b92af0B9F7C4a83f1E885132D81e4',\n  [ChainId.ROPSTEN]: '0x0cf138243F0E2Fc20b7065b5DA84E467fb7816C1',\n  [ChainId.RINKEBY]: '0xB4a81261b16b92af0B9F7C4a83f1E885132D81e4',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x9DF7a6c4c34C70949feA6e6dB2d475bCaffEaa2C',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x9DF7a6c4c34C70949feA6e6dB2d475bCaffEaa2C'\n}\n\n\nexport const BONE_LOCKER_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0xa404F66B9278c4aB8428225014266B4B239bcdc7',\n  [ChainId.ROPSTEN]: '0x951AbEe165d76F4CAbCB7e053a69CDd581d615f1',\n  [ChainId.RINKEBY]: '0xa404F66B9278c4aB8428225014266B4B239bcdc7',\n  [ChainId.KOVAN]: '0xA18529a564ED8d6EeDDFd468104f321b5844d83a',\n  [ChainId.PUPPYNET] : '0xA18529a564ED8d6EeDDFd468104f321b5844d83a'\n}\n\n\nexport const SHIBASWAP_TOPDOG_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x94235659cF8b805B2c658f9ea2D6d6DDbb17C8d7',\n  [ChainId.ROPSTEN]: '0xA897676603C7aD3E6037a11B5294dD5B3B54AD71',\n  [ChainId.RINKEBY]: '0x94235659cF8b805B2c658f9ea2D6d6DDbb17C8d7',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xa58C58fC67648924314D021033b709a475F2702D',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0xa58C58fC67648924314D021033b709a475F2702D'\n}\n\n\nexport const SHIBASWAP_UNI_FETCH_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x0E906A0A798429fe5aA81e5052a5898dD0473907',\n  [ChainId.ROPSTEN]: '0xB50De2156E3EC63a21f23E9AB6B86BDa298565bA',\n  [ChainId.RINKEBY]: '0x0E906A0A798429fe5aA81e5052a5898dD0473907',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x00E7Bed38d154E855b32D773ceB34C73872b3CBF',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x00E7Bed38d154E855b32D773ceB34C73872b3CBF'\n}\n\n\nexport const SHIBASWAP_SUSHI_FETCH_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0xb77Ff862c4f02509D44A75C9543237D68EC6c1bd',\n  [ChainId.ROPSTEN]: '0x5B25D81178e7fD2BDe3F6173847ecbA5450b59b4',\n  [ChainId.RINKEBY]: '0xb77Ff862c4f02509D44A75C9543237D68EC6c1bd',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x5B9537FC6aBa6bA3170aC1BDE76a586E4d1269d7',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x5B9537FC6aBa6bA3170aC1BDE76a586E4d1269d7'\n}\n\n\nexport const SHIBA_DASHBOARD_1_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x318A278711fc24f32550Af30E772686BBeE34141',\n  [ChainId.ROPSTEN]: '0x06E241217525A421e266D8B37823CF6AAa634EB2',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x52e37981D941D13072870d58Ed7cC9c9f50F0C4c',\n  [ChainId.PUPPYNET] : '0x52e37981D941D13072870d58Ed7cC9c9f50F0C4c'\n}\n\n\nexport const SHIBA_DASHBOARD_2_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x0Ea28D1cE1198B4Af8a84E5c08c94A907F34AdCE',\n  [ChainId.ROPSTEN]: '0x87F1e3A5A71F3e351F1037d1dCB64D0dbbAD26E1',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x695F54EE70b98DC971554034139cd9b78E771a11',\n  [ChainId.PUPPYNET] : '0x695F54EE70b98DC971554034139cd9b78E771a11'\n}\n\n\nexport const SHIBASWAP_SHIB_TOKEN_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE',\n  [ChainId.ROPSTEN]: '0xeBAdA3F2883F226BAE65fc0A6404916E965196b5',\n  [ChainId.RINKEBY]: '0x658f8c0456265DB1a5fC6BC0A7e8eFd6Fa7F302F',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x0b2367E0e56Fd9b63388F1478830c8a4b1bA5963',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0x0b2367E0e56Fd9b63388F1478830c8a4b1bA5963'\n}\n\n\nexport const SHIBASWAP_LEASH_TOKEN_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x27C70Cd1946795B66be9d954418546998b546634',\n  [ChainId.ROPSTEN]: '0x806b97D788D401aC2139413b5Aa42E5d408DF572',\n  [ChainId.RINKEBY]: '0xe74ffE1299D39231058C8B6F5AdE8BbF74eeed72',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582'\n}\n\n// Mostly not needed\n// TODO GOLIVE TOCHECK\nexport const SHIBASWAP_TIMELOCK_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.MOONBASE]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.FUJI]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.PUPPYNET] : ''\n}\n\n// TODO GOLIVE\nexport const SHIBA_BORING_HELPER_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0x7F561103db907D9865814E8fFFb0cee29BD1B414', // TODO TEMP\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x7F561103db907D9865814E8fFFb0cee29BD1B414',\n  [ChainId.PUPPYNET] : '0x7F561103db907D9865814E8fFFb0cee29BD1B414'\n}\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256'\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n}\n\nexport const xSHIB_BONE_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0xa2c14852974afE7755eA824260Ca5dF03B816458',\n  [ChainId.ROPSTEN]: '0x731191b7A770b5bF18C592658e98C1021118a1FC',\n  [ChainId.KOVAN]: '0x2918Ab3591c41A21a05e0AD192150AaEBDDfAafC',\n  [ChainId.RINKEBY]: '0x96ffC9220BEe9609D24062699d800d3B32b2f8C5',\n  [ChainId.PUPPYNET] : '0x2918Ab3591c41A21a05e0AD192150AaEBDDfAafC'\n}\n\nexport const xLEASH_BONE_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x9495A029Ce34983C0bF0c45EE8214021E95dA26A',\n  [ChainId.ROPSTEN]: '0xaE3A7Ab73acfEcaD995E20dC4DD6e05662fa10AE',\n  [ChainId.KOVAN]: '0xa658AB33537d5F54AB039BeA74E33D1F30A25CA9',\n  [ChainId.RINKEBY]: '0x6A8b4Eff67909aA4e0dDC600016220562419d2F7',\n  [ChainId.PUPPYNET] : '0xa658AB33537d5F54AB039BeA74E33D1F30A25CA9'\n}\n\nexport const xSHIB_WETH_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x67E0eb8557437aB7393243c88A11F3c7E424cA3D',\n  [ChainId.ROPSTEN]: '0x075d0E0aBEa664243697898845BbBEaB4e4D8cC3',\n  [ChainId.KOVAN]: '0x73b52f7D4B7261265801Bf90D11E63fC47Af5b78',\n  [ChainId.RINKEBY]: '0x9e7f876580bA07C5E14310cD580B8BBbF7FEB50F',\n  [ChainId.PUPPYNET] : '0x73b52f7D4B7261265801Bf90D11E63fC47Af5b78'\n}\n\nexport const WBTC_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x1e26deb7E2b83742384F4DFbb2470947F853a2A4',\n  [ChainId.ROPSTEN]: '0x6fFa825db269a91d2E60C68Ab7A38Fa9abf70D9c',\n  [ChainId.KOVAN]: '0x220ff4180C3926853d5181f094651816c72986c5',\n  [ChainId.RINKEBY]: '0x129175d454D91Df65795640c264752B9B1eB8738',\n  [ChainId.PUPPYNET] : '0x220ff4180C3926853d5181f094651816c72986c5'\n}\n\nexport const USDT_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x5140ecB1aA2DAA8427e724A6a5b3893617d8110c',\n  [ChainId.ROPSTEN]: '0x0e31C2d3BDF833114f92a1F0B0897Cb3213E805C',\n  [ChainId.KOVAN]: '0x6D8A147cFa68d6d231133193d02e3bc3fDe6d852',\n  [ChainId.RINKEBY]: '0x8B1336aa37b8129B7e5A7EF5d4EFfEc60B34001E',\n  [ChainId.PUPPYNET] : '0x6D8A147cFa68d6d231133193d02e3bc3fDe6d852'\n}\n\nexport const USDC_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x9E1FDDcfCF7c0917371497AC24d27dB764aAE0FE',\n  [ChainId.ROPSTEN]: '0x256c3400c2D196400650B15f07C9F8e88D564B0e',\n  [ChainId.KOVAN]: '0x03197C78F25c3d54862e5a33F255e16317004D3c',\n  [ChainId.RINKEBY]: '0x57793Ea74C545618F8E26B6Ecfbb62205885D1C4',\n  [ChainId.PUPPYNET] : '0x03197C78F25c3d54862e5a33F255e16317004D3c'\n}\n\nexport const DAI_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x0075f029648FFbd2026a7df1E9EFf27ebC90Ca65',\n  [ChainId.ROPSTEN]: '0xB2D3f606197a83e48D0377c8BAdcbF0e7CBEE95b',\n  [ChainId.KOVAN]: '0x9aA6C7Dd055c109228644255e63Ee92a13FEC52A',\n  [ChainId.RINKEBY]: '0xbef224eeb6959870511d2280Ce7271c42a2c0B78',\n  [ChainId.PUPPYNET] : '0x9aA6C7Dd055c109228644255e63Ee92a13FEC52A'\n}\n\nexport const tBONE_BONE_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0xBaAa2B1F770c8AA0f86203C77A6b01E8315b3238',\n  [ChainId.ROPSTEN]: '0xF4F4Db3EeaF5D1636fADa510cA1726f6280196D4',\n  [ChainId.KOVAN]: '0xB5e57C142737c9ab974048268DfAc89A50DA2E70',\n  [ChainId.RINKEBY]: '0x492C7770375C2F117B5225AabF656f7B1D0C214b',\n  [ChainId.PUPPYNET] : '0xB5e57C142737c9ab974048268DfAc89A50DA2E70'\n}\n\n// Test network addreses are not corerct. Copied from tBone\nexport const XFUND_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x6a425fC7Bc4ed7Cfb3cD89cca9925aba3B900BBe',\n  [ChainId.ROPSTEN]: '0xF4F4Db3EeaF5D1636fADa510cA1726f6280196D4',\n  [ChainId.KOVAN]: '0xB5e57C142737c9ab974048268DfAc89A50DA2E70',\n  [ChainId.RINKEBY]: '0x492C7770375C2F117B5225AabF656f7B1D0C214b',\n  [ChainId.PUPPYNET] : '0xB5e57C142737c9ab974048268DfAc89A50DA2E70'\n}\n\n// Test network addreses are not corerct. Copied from tBone\nexport const PERL_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x40Ab98602341A294C2b9d6A71266183EDC3EDF76',\n  [ChainId.ROPSTEN]: '0xF4F4Db3EeaF5D1636fADa510cA1726f6280196D4',\n  [ChainId.KOVAN]: '0xB5e57C142737c9ab974048268DfAc89A50DA2E70',\n  [ChainId.RINKEBY]: '0x492C7770375C2F117B5225AabF656f7B1D0C214b',\n  [ChainId.PUPPYNET] : '0xB5e57C142737c9ab974048268DfAc89A50DA2E70'\n}\n\n// Test network addreses are not corerct. Copied from tBone\nexport const F9_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x63837C5b60Fb7A29d5E8823A07ee98Df3fA83955',\n  [ChainId.ROPSTEN]: '0xF4F4Db3EeaF5D1636fADa510cA1726f6280196D4',\n  [ChainId.KOVAN]: '0xB5e57C142737c9ab974048268DfAc89A50DA2E70',\n  [ChainId.RINKEBY]: '0x492C7770375C2F117B5225AabF656f7B1D0C214b',\n  [ChainId.PUPPYNET] : '0xB5e57C142737c9ab974048268DfAc89A50DA2E70'\n}\n\n// Test network addreses are not corerct. Copied from tBone\nexport const RYOSHIS_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x7732674B5E5FfeC4785AEFdAEa807EeCA383B5e6',\n  [ChainId.ROPSTEN]: '0xF4F4Db3EeaF5D1636fADa510cA1726f6280196D4',\n  [ChainId.KOVAN]: '0xB5e57C142737c9ab974048268DfAc89A50DA2E70',\n  [ChainId.RINKEBY]: '0x492C7770375C2F117B5225AabF656f7B1D0C214b',\n  [ChainId.PUPPYNET] : '0xB5e57C142737c9ab974048268DfAc89A50DA2E70'\n}\n\n// Test network addreses are not corerct. Copied from tBone\nexport const ZIG_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x2697B304724f277F4AD498a2792D694917bc640F',\n  [ChainId.ROPSTEN]: '0xF4F4Db3EeaF5D1636fADa510cA1726f6280196D4',\n  [ChainId.KOVAN]: '0xB5e57C142737c9ab974048268DfAc89A50DA2E70',\n  [ChainId.RINKEBY]: '0x492C7770375C2F117B5225AabF656f7B1D0C214b',\n  [ChainId.PUPPYNET] : '0xB5e57C142737c9ab974048268DfAc89A50DA2E70'\n}\n\n// Test network addreses are not corerct. Copied from mainnet\nexport const CIV_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x8503Bf17460Aed3d19e5e09BBC2B8d70aA79ec6e',\n  [ChainId.ROPSTEN]: '0x8503Bf17460Aed3d19e5e09BBC2B8d70aA79ec6e',\n  [ChainId.KOVAN]: '0x8503Bf17460Aed3d19e5e09BBC2B8d70aA79ec6e',\n  [ChainId.RINKEBY]: '0x8503Bf17460Aed3d19e5e09BBC2B8d70aA79ec6e',\n  [ChainId.PUPPYNET] : '0x8503Bf17460Aed3d19e5e09BBC2B8d70aA79ec6e'\n}\n\n// Test network addreses are not corerct. Copied from mainnet\nexport const BASIC_BONE_REWARDS_MERKLE_DISTRIBUTOR: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x205c41bf932A34E14fea6b9B25585b3A5903aEeB',\n  [ChainId.ROPSTEN]: '0x205c41bf932A34E14fea6b9B25585b3A5903aEeB',\n  [ChainId.KOVAN]: '0x205c41bf932A34E14fea6b9B25585b3A5903aEeB',\n  [ChainId.RINKEBY]: '0x205c41bf932A34E14fea6b9B25585b3A5903aEeB',\n  [ChainId.PUPPYNET] : '0x205c41bf932A34E14fea6b9B25585b3A5903aEeB'\n}\n\n// Test network addreses are not corerct. Copied from mainnet\nexport const VEMP_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0xC2cB0C2bDE7436Fb90C187bA072a5038B3Fd172f',\n  [ChainId.ROPSTEN]: '0xC2cB0C2bDE7436Fb90C187bA072a5038B3Fd172f',\n  [ChainId.KOVAN]: '0xC2cB0C2bDE7436Fb90C187bA072a5038B3Fd172f',\n  [ChainId.RINKEBY]: '0xC2cB0C2bDE7436Fb90C187bA072a5038B3Fd172f',\n  [ChainId.PUPPYNET] : '0xC2cB0C2bDE7436Fb90C187bA072a5038B3Fd172f'\n}\n\n// Test network addreses are not corerct. Copied from mainnet\nexport const UFO_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0x49b7B2cBa504088Ff94615d8929d41F5535d1877',\n  [ChainId.ROPSTEN]: '0x49b7B2cBa504088Ff94615d8929d41F5535d1877',\n  [ChainId.KOVAN]: '0x49b7B2cBa504088Ff94615d8929d41F5535d1877',\n  [ChainId.RINKEBY]: '0x49b7B2cBa504088Ff94615d8929d41F5535d1877',\n  [ChainId.PUPPYNET] : '0x49b7B2cBa504088Ff94615d8929d41F5535d1877'\n}\n\n// Test network addreses are not corerct. Copied from mainnet\nexport const ARCHIEVE_MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\n  [ChainId.MAINNET]: '0xcA335E086de6b546e152A8C67BdB20656750872f',\n  [ChainId.ROPSTEN]: '0xcA335E086de6b546e152A8C67BdB20656750872f',\n  [ChainId.KOVAN]: '0xcA335E086de6b546e152A8C67BdB20656750872f',\n  [ChainId.RINKEBY]: '0xcA335E086de6b546e152A8C67BdB20656750872f',\n  [ChainId.PUPPYNET] : '0xcA335E086de6b546e152A8C67BdB20656750872f'\n}","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport JSBI from 'jsbi'\nimport { getAddress } from '@ethersproject/address'\n\nimport { BigintIsh, ZERO, ONE, TWO, THREE, SolidityType, SOLIDITY_TYPE_MAXIMA } from './constants'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\n  return bigintIsh instanceof JSBI\n    ? bigintIsh\n    : typeof bigintIsh === 'bigint'\n    ? JSBI.BigInt(bigintIsh.toString())\n    : JSBI.BigInt(bigintIsh)\n}\n\n// mock the on-chain sqrt function\nexport function sqrt(y: JSBI): JSBI {\n  validateSolidityTypeInstance(y, SolidityType.uint256)\n  let z: JSBI = ZERO\n  let x: JSBI\n  if (JSBI.greaterThan(y, THREE)) {\n    z = y\n    x = JSBI.add(JSBI.divide(y, TWO), ONE)\n    while (JSBI.lessThan(x, z)) {\n      z = x\n      x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO)\n    }\n  } else if (JSBI.notEqual(y, ZERO)) {\n    z = ONE\n  }\n  return z\n}\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import JSBI from 'jsbi'\n\nimport { ChainId, SolidityType } from '../constants'\nimport { validateSolidityTypeInstance } from '../utils'\n\n/**\n * A currency is any fungible financial instrument on Ethereum, including Ether and all ERC20 tokens.\n *\n * The only instance of the base class `Currency` is Ether.\n */\nexport class Currency {\n  public readonly decimals: number\n  public readonly symbol?: string\n  public readonly name?: string\n\n  public static readonly ETHER: Currency = new Currency(18, 'ETH', 'Ether')\n\n  public static readonly BNB: Currency = new Currency(18, 'BNB', 'Binance Coin')\n\n  public static readonly FTM: Currency = new Currency(18, 'FTM', 'Fantom')\n\n  public static readonly MATIC: Currency = new Currency(18, 'MATIC', 'Matic')\n\n  public static readonly XDAI: Currency = new Currency(18, 'XDAI', 'xDai')\n\n  public static readonly GLMR: Currency = new Currency(18, 'GLMR', 'Glimmer')\n\n  public static readonly AVAX: Currency = new Currency(18, 'AVAX', 'Avalanche')\n\n  public static readonly HT: Currency = new Currency(18, 'HT', 'Heco Token')\n\n  public static readonly ONE: Currency = new Currency(18, 'ONE', 'Harmony')\n\n  public static readonly BONE : Currency = new Currency(18, 'BONE', 'BONE SHIBASWAP')\n\n  public static readonly NATIVE = {\n    [ChainId.MAINNET]: Currency.ETHER,\n    [ChainId.ROPSTEN]: Currency.ETHER,\n    [ChainId.RINKEBY]: Currency.ETHER,\n    [ChainId.GÖRLI]: Currency.ETHER,\n    [ChainId.KOVAN]: Currency.ETHER,\n    [ChainId.FANTOM]: Currency.FTM,\n    [ChainId.FANTOM_TESTNET]: Currency.FTM,\n    [ChainId.MATIC]: Currency.MATIC,\n    [ChainId.MATIC_TESTNET]: Currency.MATIC,\n    [ChainId.XDAI]: Currency.XDAI,\n    [ChainId.BSC]: Currency.BNB,\n    [ChainId.BSC_TESTNET]: Currency.BNB,\n    [ChainId.ARBITRUM]: Currency.ETHER,\n    [ChainId.MOONBASE]: Currency.GLMR,\n    [ChainId.AVALANCHE]: Currency.AVAX,\n    [ChainId.FUJI]: Currency.AVAX,\n    [ChainId.HECO]: Currency.HT,\n    [ChainId.HECO_TESTNET]: Currency.HT,\n    [ChainId.HARMONY]: Currency.ONE,\n    [ChainId.HARMONY_TESTNET]: Currency.ONE,\n    [ChainId.PUPPYNET] : Currency.BONE\n  }\n\n  /**\n   * Constructs an instance of the base class `Currency`. The only instance of the base class `Currency` is `Currency.ETHER`.\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(decimals: number, symbol?: string, name?: string) {\n    validateSolidityTypeInstance(JSBI.BigInt(decimals), SolidityType.uint8)\n\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  public static getNativeCurrency(chainId?: ChainId) {\n    if (!chainId) {\n      throw Error(`No chainId ${chainId}`)\n    }\n\n    if (!(chainId in Currency.NATIVE)) {\n      throw Error(`No native currency defined for chainId ${chainId}`)\n    }\n    return Currency.NATIVE[chainId]\n  }\n\n  public static getNativeCurrencySymbol(chainId?: ChainId) {\n    const nativeCurrency = this.getNativeCurrency(chainId)\n    return nativeCurrency.symbol\n  }\n\n  public static getNativeCurrencyName(chainId?: ChainId) {\n    const nativeCurrency = this.getNativeCurrency(chainId)\n    return nativeCurrency.name\n  }\n\n  public getSymbol(chainId?: ChainId) {\n    if (!chainId) {\n      return this?.symbol\n    }\n\n    if (this?.symbol === 'ETH') {\n      return Currency.getNativeCurrencySymbol(chainId)\n    }\n\n    // if (this?.symbol === 'WETH') {\n    //   return `W${Currency.getNativeCurrencySymbol(chainId)}`\n    // }\n\n    return this?.symbol\n  }\n\n  public getName(chainId?: ChainId) {\n    if (!chainId) {\n      return this?.name\n    }\n\n    if (this?.name === 'Ether') {\n      return Currency.getNativeCurrencyName(chainId)\n    }\n\n    return this?.name\n  }\n}\n\nconst ETHER = Currency.ETHER\n\nexport { ETHER }\n","import invariant from 'tiny-invariant'\nimport {ChainId} from '../constants'\nimport {validateAndParseAddress} from '../utils'\nimport {Currency} from './currency'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends Currency {\n  public readonly chainId: ChainId\n  public readonly address: string\n\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\n    super(decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Token): boolean {\n    // short circuit on reference equality\n    if (this === other) {\n      return true\n    }\n    return this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n\n// TODO GOLIVE\n// In reality this is a map of the wrapped version of the native token for a given network.\n// TODO: Rename to WNATIVE for sanity\nexport const WETH = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.ROPSTEN]: new Token(\n    ChainId.ROPSTEN,\n    '0xc778417e063141139fce010982780140aa0cd5ab',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.RINKEBY]: new Token(\n    ChainId.RINKEBY,\n    '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  // [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, '0xa42dC4Ce21514e7d15811b49DD23995eEC5771D0', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xaE15AcEB46f6477543F2BF641d9547FB8607a9fE', 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'WFTM', 'Wrapped FTM'),\n  [ChainId.FANTOM_TESTNET]: new Token(\n    ChainId.FANTOM_TESTNET,\n    '0xf1277d1Ed8AD466beddF92ef448A132661956621',\n    18,\n    'FTM',\n    'Wrapped FTM'\n  ),\n  [ChainId.MATIC]: new Token(\n    ChainId.MATIC,\n    '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n    18,\n    'WMATIC',\n    'Wrapped Matic'\n  ),\n  [ChainId.MATIC_TESTNET]: new Token(\n    ChainId.MATIC_TESTNET,\n    '0x5B67676a984807a212b1c59eBFc9B3568a474F0a',\n    18,\n    'WMATIC',\n    'Wrapped Matic'\n  ),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d', 18, 'WXDAI', 'Wrapped xDai'),\n  [ChainId.BSC]: new Token(ChainId.BSC, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n  [ChainId.BSC_TESTNET]: new Token(\n    ChainId.BSC_TESTNET,\n    '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n    18,\n    'WBNB',\n    'Wrapped BNB'\n  ),\n  [ChainId.ARBITRUM]: new Token(\n    ChainId.ARBITRUM,\n    '0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.MOONBASE]: new Token(\n    ChainId.MOONBASE,\n    '0xe73763DB808ecCDC0E36bC8E32510ED126910394',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.AVALANCHE]: new Token(\n    ChainId.AVALANCHE,\n    '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n    18,\n    'WAVAX',\n    'Wrapped AVAX'\n  ),\n  [ChainId.FUJI]: new Token(ChainId.FUJI, '0xd00ae08403B9bbb9124bB305C09058E32C39A48c', 18, 'WAVAX', 'Wrapped AVAX'),\n  [ChainId.HECO]: new Token(ChainId.HECO, '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F', 18, 'WHT', 'Wrapped HT'),\n  [ChainId.HECO_TESTNET]: new Token(\n    ChainId.HECO_TESTNET,\n    '0x5B2DA6F42CA09C77D577a12BeaD0446148830687',\n    18,\n    'WHT',\n    'Wrapped HT'\n  ),\n  [ChainId.HARMONY]: new Token(\n    ChainId.HARMONY,\n    '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n    18,\n    'WONE',\n    'Wrapped ONE'\n  ),\n  [ChainId.HARMONY_TESTNET]: new Token(\n    ChainId.HARMONY_TESTNET,\n    '0x7a2afac38517d512E55C0bCe3b6805c10a04D60F',\n    18,\n    'WONE',\n    'Wrapped ONE'\n  ),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x7F9A7bcB3494EF9C92E9E381C4a37e159e8efB86', 18, 'TestWETH', 'WETH')\n}\n\nexport type ChainTokenMap = {\n  readonly [chainId in ChainId]?: Token\n}\n\nexport const USDC: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD Coin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x72dd868Fe89113531b18f997844b77563CB665b8', 6, 'USDC', 'USD Coin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x5067F6Dbdccd70771352e9d5E5a19DDf6A8fAfdb', 6, 'USDC', 'USD Coin'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x49A04ce101EE69b7ff76691F9EeBD134E581D4eD', 6, 'USDC', 'USD Coin'),\n  [ChainId.GÖRLI] : new Token(ChainId.GÖRLI, '0x8e8355851517aB6606354f59CD3C0e04a93940A8', 6, 'USDC', 'USDC Coin'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x77b0FD79b651FC56D76e2Be0844C3c2cedd3E269', 6, 'USDC', 'USDC Coin')\n}\n\nexport const USDT: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x9E3099cA4bF0FddfAa79AC7C5dA86b0Bd8BA056C', 6, 'USDT', 'Tether USD'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x3672Aec96464C945F8274BB22Ef1de64398deB44', 6, 'USDT', 'Tether USD'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xE4B52a9781762E6a8d6cc53fD2D6be83f824971E', 6, 'USDT', 'Tether USD'),\n  [ChainId.GÖRLI] : new Token(ChainId.GÖRLI, '0xaF091A8C0626Fe6af436099c694C6d177D73098A', 6, 'USDT', 'Tether USD'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0xfe16BD53f80Ef31a96413011e2eF20e45bF03A7a', 6, 'USDT', 'Tether USD')\n}\n\nexport const WBTC: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x3673628B0a9B27480c57026FCddc9Ac16d61A6EA', 8, 'WBTC', 'Wrapped BTC'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0xc59837d0AeBCC6AF23Dcb3c23eb757b07B0EaE0c', 8, 'WBTC', 'Wrapped BTC'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xe12a4A6a6d0BFe96145D313D4d320bE664F385DF', 8, 'WBTC', 'Wrapped BTC'),\n  [ChainId.GÖRLI] : new Token(ChainId.GÖRLI, '0xE91faCC78F22EF3B47772107830d29B50e05b1Ae', 8, 'WBTC', 'Wrapped BTC'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x81929e00d02AF99187111EE37E0D30588116F2E6', 8, 'WBTC', 'Wrapped BTC')\n}\n\nexport const DAI: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x560EA439FA3c8ee6A4cE43a2A74320AcE26Aa97a', 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0xdd049E9716a7cdeeeaac3890e6721A378ABa71d8', 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x102121d11a638eF1AAB9f772dE34Ea0A30cf97eb', 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, '0x0110618BA46C2c47bFc4BE9885f0ea2521b99e97', 18, 'DAI', 'Dai Stablecoin'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x59Bd7dD51462D2a36298DB3219601365f8eb1dA0', 18, 'DAI', 'Dai Stablecoin')\n}\n\n\nexport const BONE: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x9813037ee2218799597d83D4a5B6F3b6778218d9', 18, 'BONE', 'BONE SHIBASWAP'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x6d4bB7b0559Aebfc55A42cFEAAeb287c01a7f244', 18, 'BONE', 'BONE SHIBASWAP'),\n  [ChainId.ROPSTEN]: new Token(ChainId.KOVAN, '0xD514244ED479A2050c44B448Ec681FaADd8c7429', 18, 'BONE', 'BONE SHIBASWAP'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xD514244ED479A2050c44B448Ec681FaADd8c7429', 18, 'BONE', 'BONE SHIBASWAP'),\n  [ChainId.GÖRLI] : new Token(ChainId.GÖRLI, '0xBC071C64eD8F536011c78e847755680740d6b73C', 18, 'BONE', 'BONE SHIBASWAP'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x0000000000000000000000000000000000001010', 18, 'BONE', 'BONE SHIBASWAP')\n}\n\n\n//TODO GOLIVE TOCHECK DECIMALS\nexport const SHIBA_INU: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE', 18, 'SHIB', 'SHIBA INU'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x0b2367E0e56Fd9b63388F1478830c8a4b1bA5963', 18, 'SHIB', 'SHIBA INU'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0xeBAdA3F2883F226BAE65fc0A6404916E965196b5', 18, 'SHIB', 'SHIBA INU'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x658f8c0456265DB1a5fC6BC0A7e8eFd6Fa7F302F', 18, 'SHIB', 'SHIBA INU'),\n  [ChainId.GÖRLI] : new Token(ChainId.GÖRLI, '0x24DC7E3Dee8F69465F73402211093190777BD4D4', 18, 'SHIB', 'SHIBA INU'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x2A5562C952E671c60639f073BaAa6739C6927375', 18, 'SHIB', 'SHIBA INU')\n}\n\n//TODO GOLIVE TOCHECK DECIMALS\nexport const LEASH: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x27C70Cd1946795B66be9d954418546998b546634', 18, 'LEASH', 'DOGE KILLER'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'LEASH', 'DOGE KILLER'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x806b97D788D401aC2139413b5Aa42E5d408DF572', 18, 'LEASH', 'DOGE KILLER'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xe74ffE1299D39231058C8B6F5AdE8BbF74eeed72', 18, 'LEASH', 'DOGE KILLER'),\n  [ChainId.GÖRLI] : new Token(ChainId.GÖRLI, '0xF03a16A00E2Bd4de22aBf8d9b6261c0d2eBb1b70', 18, 'LEASH', 'DOGE KILLER'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x848bbFEff983F7ED5B704b11b88008FebccB961d', 18, 'LEASH', 'LEASH')\n}\n\nexport const UNISWAP_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984', 18, 'UNI', 'Uniswap'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'UNI', 'Uniswap'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x066141B68F211E89F1bBBea09B227f380EB783c4', 18, 'UNI', 'Uniswap'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x9a2353315b13E9532c3353B910386947b4DB567D', 18, 'UNI', 'Uniswap'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x9a2353315b13E9532c3353B910386947b4DB567D', 18, 'UNI', 'Uniswap'),\n}\n\nexport const SUSHI_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2', 18, 'SUSHI', 'SushiToken'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'SUSHI', 'SushiToken'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x1e3f4b46E8ab182aD1ea0544b4fFf9Ff4eD9Fa5B', 18, 'SUSHI', 'SushiToken'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x874c04a195e6696A53E7d856dAe055876fA367f6', 18, 'SUSHI', 'SushiToken'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x874c04a195e6696A53E7d856dAe055876fA367f6', 18, 'SUSHI', 'SushiToken'),\n\n}\n\nexport const LINK_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x514910771AF9Ca656af840dff83E8264EcF986CA', 18, 'LINK', 'ChainLink Token'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'LINK', 'ChainLink Token'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x856333e55dae762c80208C652671EDf124210Efd', 18, 'LINK', 'ChainLink Token'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xC597CEDF0708486aC170Acb0e8Ca921008a88dDf', 18, 'LINK', 'ChainLink Token'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0xC597CEDF0708486aC170Acb0e8Ca921008a88dDf', 18, 'LINK', 'ChainLink Token'),\n}\n\nexport const XFUND_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x892A6f9dF0147e5f079b0993F486F9acA3c87881', 9, 'xFUND', 'unification.com/xfund'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 9, 'xFUND', 'unification.com/xfund'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x7fb775eAe1B6Ab3f9a65b6C718C331D3b56d6F25', 9, 'xFUND', 'unification.com/xfund'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x5Ff20Fc8F267C7df40893735776a08de20Eea72a', 9, 'xFUND', 'unification.com/xfund'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x5Ff20Fc8F267C7df40893735776a08de20Eea72a', 9, 'xFUND', 'unification.com/xfund'),\n}\n\nexport const SNX_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F', 18, 'SNX', 'Synthetix Network Token'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'SNX', 'Synthetix Network Token'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0xb5812B65dD0c0819A3cdd1Ae98bEa3871230c1aF', 18, 'SNX', 'Synthetix Network Token'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x176f93342918A86CF53bE0BF595D68e27d2E629E', 18, 'SNX', 'Synthetix Network Token'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x176f93342918A86CF53bE0BF595D68e27d2E629E', 18, 'SNX', 'Synthetix Network Token'),\n}\n\nexport const GRT_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xc944E90C64B2c07662A292be6244BDf05Cda44a7', 18, 'GRT', 'Graph Token'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'GRT', 'Graph Token'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x499252B5ff27c846B6c2303f333b12A32bBf5EFC', 18, 'GRT', 'Graph Token'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xE778fAE3298AF5E7dB106246593f29Ae14F18244', 18, 'GRT', 'Graph Token'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0xE778fAE3298AF5E7dB106246593f29Ae14F18244', 18, 'GRT', 'Graph Token'),\n}\n\nexport const MEME_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xD5525D397898e5502075Ea5E830d8914f6F0affe', 8, 'MEME', 'MEME'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 8, 'MEME', 'MEME'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0xb50D7AfeC417922BdCD9Da7F36ed4D5FDa14a397', 8, 'MEME', 'MEME'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x349d678CED86Cc0d39B25A0cdF749F9Dde6FD655', 8, 'MEME', 'MEME'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x349d678CED86Cc0d39B25A0cdF749F9Dde6FD655', 8, 'MEME', 'MEME'),\n}\n\nexport const ELON_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x761D38e5ddf6ccf6Cf7c55759d5210750B5D60F3', 18, 'ELON', 'Dogelon'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'ELON', 'Dogelon'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x60456F41B0De8764fd180d00cF40AD23D5998EF5', 18, 'ELON', 'Dogelon'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x3c188aE815f6a319BE43dc3c53A264C1BB854fe6', 18, 'ELON', 'Dogelon'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x3c188aE815f6a319BE43dc3c53A264C1BB854fe6', 18, 'ELON', 'Dogelon'),\n}\n\nexport const DUCK_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x92E187a03B6CD19CB6AF293ba17F2745Fd2357D5', 18, 'DUCK', 'Unit protocol (DUCK)'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'DUCK', 'Unit protocol (DUCK)'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'DUCK', 'Unit protocol (DUCK)'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xDD5eC7673aC92f647B5d4D8e51205A07e76536A8', 18, 'DUCK', 'Unit protocol (DUCK)'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0xDD5eC7673aC92f647B5d4D8e51205A07e76536A8', 18, 'DUCK', 'Unit protocol (DUCK)'),\n}\n\nexport const VXV_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x7D29A64504629172a429e64183D6673b9dAcbFCe', 18, 'VXV', 'VectorspaceAI'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'VXV', 'VectorspaceAI'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'VXV', 'VectorspaceAI'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'VXV', 'VectorspaceAI'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'VXV', 'VectorspaceAI'),\n}\n\n// All test net addresses are wrong\nexport const PERL_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xeca82185adCE47f39c684352B0439f030f860318', 18, 'PERL', 'Perlin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'PERL', 'Perlin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'PERL', 'Perlin'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'PERL', 'Perlin'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'PERL', 'Perlin'),\n}\n\n// All test net addresses are wrong\nexport const F9_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x38A94e92A19E970c144DEd0B2DD47278CA11CC1F', 9, 'F9', 'Falcon 9'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 9, 'F9', 'Falcon 9'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 9, 'F9', 'Falcon 9'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 9, 'F9', 'Falcon 9'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 9, 'F9', 'Falcon 9'),\n}\n\n// All test net addresses are wrong\nexport const ZIG_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x7BeBd226154E865954A87650FAefA8F485d36081', 18, 'ZIG', 'ZigCoin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'ZIG', 'ZigCoin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'ZIG', 'ZigCoin'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'ZIG', 'ZigCoin'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'ZIG', 'ZigCoin'),\n}\n\n// All test net addresses are wrong\nexport const RYOSHIS_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x777E2ae845272a2F540ebf6a3D03734A5a8f618e', 18, 'RYOSHI', 'Ryoshis Vision'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xf90e84b13FaA6a50A5c361a8d35019C4236b1582', 18, 'RYOSHI', 'Ryoshis Vision'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'RYOSHI', 'Ryoshis Vision'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'RYOSHI', 'Ryoshis Vision'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x6d8413B2E48Bb2AabC3Cfc3F3D3991EC904C9fC4', 18, 'RYOSHI', 'Ryoshis Vision'),\n}\n\n// All test net addresses are wrong\nexport const CIV_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x37fE0f067FA808fFBDd12891C0858532CFE7361d', 18, 'CIV', 'Civilization'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x37fE0f067FA808fFBDd12891C0858532CFE7361d', 18, 'CIV', 'Civilization'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x37fE0f067FA808fFBDd12891C0858532CFE7361d', 18, 'CIV', 'Civilization'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x37fE0f067FA808fFBDd12891C0858532CFE7361d', 18, 'CIV', 'Civilization'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x37fE0f067FA808fFBDd12891C0858532CFE7361d', 18, 'CIV', 'Civilization'),\n}\n\n// All test net addresses are wrong\nexport const VEMP_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0xcFEB09C3c5F0f78aD72166D55f9e6E9A60e96eEC', 18, 'VEMP', 'vEmpire Gamer Token'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0xcFEB09C3c5F0f78aD72166D55f9e6E9A60e96eEC', 18, 'VEMP', 'vEmpire Gamer Token'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0xcFEB09C3c5F0f78aD72166D55f9e6E9A60e96eEC', 18, 'VEMP', 'vEmpire Gamer Token'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0xcFEB09C3c5F0f78aD72166D55f9e6E9A60e96eEC', 18, 'VEMP', 'vEmpire Gamer Token'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0xcFEB09C3c5F0f78aD72166D55f9e6E9A60e96eEC', 18, 'VEMP', 'vEmpire Gamer Token'),\n}\n\n// All test net addresses are wrong\nexport const UFO_TOKEN: ChainTokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, '0x249e38Ea4102D0cf8264d3701f1a0E39C4f2DC3B', 18, 'UFO', 'THE TRUTH'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, '0x249e38Ea4102D0cf8264d3701f1a0E39C4f2DC3B', 18, 'UFO', 'THE TRUTH'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, '0x249e38Ea4102D0cf8264d3701f1a0E39C4f2DC3B', 18, 'UFO', 'THE TRUTH'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, '0x249e38Ea4102D0cf8264d3701f1a0E39C4f2DC3B', 18, 'UFO', 'THE TRUTH'),\n  [ChainId.PUPPYNET] : new Token(ChainId.PUPPYNET, '0x249e38Ea4102D0cf8264d3701f1a0E39C4f2DC3B', 18, 'UFO', 'THE TRUTH'),\n}","import invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Decimal from 'decimal.js-light'\nimport _Big, { RoundingMode } from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding } from '../../constants'\nimport { ONE } from '../../constants'\nimport { parseBigintIsh } from '../../utils'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\n    this.numerator = parseBigintIsh(numerator)\n    this.denominator = parseBigintIsh(denominator)\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = other instanceof Fraction ? other : new Fraction(parseBigintIsh(other))\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({ precision: significantDigits + 1, rounding: toSignificantRounding[rounding] })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n}\n","import { currencyEquals } from '../token'\nimport { Currency, ETHER } from '../currency'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport _Big from 'big.js'\nimport toFormat from 'toformat'\n\nimport { BigintIsh, Rounding, TEN, SolidityType } from '../../constants'\nimport { parseBigintIsh, validateSolidityTypeInstance } from '../../utils'\nimport { Fraction } from './fraction'\n\nconst Big = toFormat(_Big)\n\nexport class CurrencyAmount extends Fraction {\n  public readonly currency: Currency\n\n  /**\n   * Helper that calls the constructor with the ETHER currency\n   * @param amount ether amount in wei\n   */\n  public static ether(amount: BigintIsh): CurrencyAmount {\n    return new CurrencyAmount(ETHER, amount)\n  }\n\n  // amount _must_ be raw, i.e. in the native representation\n  protected constructor(currency: Currency, amount: BigintIsh) {\n    const parsedAmount = parseBigintIsh(amount)\n    validateSolidityTypeInstance(parsedAmount, SolidityType.uint256)\n\n    super(parsedAmount, JSBI.exponentiate(TEN, JSBI.BigInt(currency.decimals)))\n    this.currency = currency\n  }\n\n  public get raw(): JSBI {\n    return this.numerator\n  }\n\n  public add(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(this.currency, other.currency), 'TOKEN')\n    return new CurrencyAmount(this.currency, JSBI.subtract(this.raw, other.raw))\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(format)\n  }\n}\n","import { CurrencyAmount } from './currencyAmount'\nimport { Token } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh } from '../../constants'\n\nexport class TokenAmount extends CurrencyAmount {\n  public readonly token: Token\n\n  // amount _must_ be raw, i.e. in the native representation\n  public constructor(token: Token, amount: BigintIsh) {\n    super(token, amount)\n    this.token = token\n  }\n\n  public add(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.add(this.raw, other.raw))\n  }\n\n  public subtract(other: TokenAmount): TokenAmount {\n    invariant(this.token.equals(other.token), 'TOKEN')\n    return new TokenAmount(this.token, JSBI.subtract(this.raw, other.raw))\n  }\n}\n","import { Token } from '../token'\nimport { TokenAmount } from './tokenAmount'\nimport { currencyEquals } from '../token'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\n\nimport { BigintIsh, Rounding, TEN } from '../../constants'\nimport { Currency } from '../currency'\nimport { Route } from '../route'\nimport { Fraction } from './fraction'\nimport { CurrencyAmount } from './currencyAmount'\n\nexport class Price extends Fraction {\n  public readonly baseCurrency: Currency // input i.e. denominator\n  public readonly quoteCurrency: Currency // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  public static fromRoute(route: Route): Price {\n    const prices: Price[] = []\n    for (const [i, pair] of route.pairs.entries()) {\n      prices.push(\n        route.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.raw, pair.reserve1.raw)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.raw, pair.reserve0.raw)\n      )\n    }\n    return prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n  }\n\n  // denominator and numerator _must_ be raw, i.e. in the native representation\n  public constructor(baseCurrency: Currency, quoteCurrency: Currency, denominator: BigintIsh, numerator: BigintIsh) {\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(TEN, JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(TEN, JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  public get raw(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n\n  public get adjusted(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public invert(): Price {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  public multiply(other: Price): Price {\n    invariant(currencyEquals(this.quoteCurrency, other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  // performs floor division on overflow\n  public quote(currencyAmount: CurrencyAmount): CurrencyAmount {\n    invariant(currencyEquals(currencyAmount.currency, this.baseCurrency), 'TOKEN')\n    if (this.quoteCurrency instanceof Token) {\n      return new TokenAmount(this.quoteCurrency, super.multiply(currencyAmount.raw).quotient)\n    }\n    return CurrencyAmount.ether(super.multiply(currencyAmount.raw).quotient)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjusted.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport invariant from 'tiny-invariant'\nimport JSBI from 'jsbi'\nimport { pack, keccak256 } from '@ethersproject/solidity'\nimport { getCreate2Address } from '@ethersproject/address'\n\nimport {\n  BigintIsh,\n  MINIMUM_LIQUIDITY,\n  ZERO,\n  ONE,\n  FIVE,\n  _997,\n  _1000,\n  ChainId,\n  SHIBASWAP_FACTORY_ADDRESS,\n  SHIBA_CODE_HASH\n} from '../constants'\nimport { sqrt, parseBigintIsh } from '../utils'\nimport { InsufficientReservesError, InsufficientInputAmountError } from '../errors'\nimport { Token } from './token'\n\nlet PAIR_ADDRESS_CACHE: { [token0Address: string]: { [token1Address: string]: string } } = {}\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [TokenAmount, TokenAmount]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    const tokens = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n\n    if (PAIR_ADDRESS_CACHE?.[tokens[0].address]?.[tokens[1].address] === undefined && SHIBASWAP_FACTORY_ADDRESS[tokenA.chainId]) {\n      PAIR_ADDRESS_CACHE = {\n        ...PAIR_ADDRESS_CACHE,\n        [tokens[0].address]: {\n          ...PAIR_ADDRESS_CACHE?.[tokens[0].address],\n          [tokens[1].address]: getCreate2Address(\n              SHIBASWAP_FACTORY_ADDRESS[tokenA.chainId],\n            keccak256(['bytes'], [pack(['address', 'address'], [tokens[0].address, tokens[1].address])]),\n            SHIBA_CODE_HASH\n          )\n        }\n      }\n    }\n\n    return PAIR_ADDRESS_CACHE[tokens[0].address][tokens[1].address]\n  }\n\n  public constructor(tokenAmountA: TokenAmount, tokenAmountB: TokenAmount) {\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    this.liquidityToken = new Token(\n      tokenAmounts[0].token.chainId,\n      Pair.getAddress(tokenAmounts[0].token, tokenAmounts[1].token),\n      18,\n      'UNI-V2',\n      'Uniswap V2'\n    )\n    this.tokenAmounts = tokenAmounts as [TokenAmount, TokenAmount]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price {\n    return new Price(this.token0, this.token1, this.tokenAmounts[0].raw, this.tokenAmounts[1].raw)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price {\n    return new Price(this.token1, this.token0, this.tokenAmounts[1].raw, this.tokenAmounts[0].raw)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): ChainId {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].token\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].token\n  }\n\n  public get reserve0(): TokenAmount {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): TokenAmount {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(inputAmount.token), 'TOKEN')\n    if (JSBI.equal(this.reserve0.raw, ZERO) || JSBI.equal(this.reserve1.raw, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.token)\n    const outputReserve = this.reserveOf(inputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.raw, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.raw)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.raw, _1000), inputAmountWithFee)\n    const outputAmount = new TokenAmount(\n      inputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.raw, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: TokenAmount): [TokenAmount, Pair] {\n    invariant(this.involvesToken(outputAmount.token), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.raw, ZERO) ||\n      JSBI.equal(this.reserve1.raw, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.raw, this.reserveOf(outputAmount.token).raw)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.token)\n    const inputReserve = this.reserveOf(outputAmount.token.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.raw, outputAmount.raw), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.raw, outputAmount.raw), _997)\n    const inputAmount = new TokenAmount(\n      outputAmount.token.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: TokenAmount,\n    tokenAmountA: TokenAmount,\n    tokenAmountB: TokenAmount\n  ): TokenAmount {\n    invariant(totalSupply.token.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.token.sortsBefore(tokenAmountB.token) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].token.equals(this.token0) && tokenAmounts[1].token.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.raw, ZERO)) {\n      liquidity = JSBI.subtract(sqrt(JSBI.multiply(tokenAmounts[0].raw, tokenAmounts[1].raw)), MINIMUM_LIQUIDITY)\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].raw, totalSupply.raw), this.reserve0.raw)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].raw, totalSupply.raw), this.reserve1.raw)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return new TokenAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: TokenAmount,\n    liquidity: TokenAmount,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): TokenAmount {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.token.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.token.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.raw, totalSupply.raw), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: TokenAmount\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = parseBigintIsh(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.raw, this.reserve1.raw))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.raw, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(new TokenAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return new TokenAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.raw, this.reserveOf(token).raw), totalSupplyAdjusted.raw)\n    )\n  }\n}\n","import { ChainId } from '../constants'\nimport invariant from 'tiny-invariant'\n\nimport { Currency, ETHER } from './currency'\nimport { Token, WETH } from './token'\nimport { Pair } from './pair'\nimport { Price } from './fractions/price'\n\nexport class Route {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: Currency\n  public readonly output: Currency\n  public readonly midPrice: Price\n\n  public constructor(pairs: Pair[], input: Currency, output?: Currency) {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(\n      pairs.every(pair => pair.chainId === pairs[0].chainId),\n      'CHAIN_IDS'\n    )\n    invariant(\n      (input instanceof Token && pairs[0].involvesToken(input)) ||\n        (input === ETHER && pairs[0].involvesToken(WETH[pairs[0].chainId])),\n      'INPUT'\n    )\n    invariant(\n      typeof output === 'undefined' ||\n        (output instanceof Token && pairs[pairs.length - 1].involvesToken(output)) ||\n        (output === ETHER && pairs[pairs.length - 1].involvesToken(WETH[pairs[0].chainId])),\n      'OUTPUT'\n    )\n\n    const path: Token[] = [input instanceof Token ? input : WETH[pairs[0].chainId]]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.midPrice = Price.fromRoute(this)\n    this.input = input\n    this.output = output ?? path[path.length - 1]\n  }\n\n  public get chainId(): ChainId {\n    return this.pairs[0].chainId\n  }\n}\n","import { Rounding, _100 } from '../../constants'\nimport { Fraction } from './fraction'\n\nconst _100_PERCENT = new Fraction(_100)\n\nexport class Percent extends Fraction {\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return this.multiply(_100_PERCENT).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import invariant from 'tiny-invariant'\n\nimport { ChainId, ONE, TradeType, ZERO } from '../constants'\nimport { sortedInsert } from '../utils'\nimport { Currency, ETHER } from './currency'\nimport { CurrencyAmount } from './fractions/currencyAmount'\nimport { Fraction } from './fractions/fraction'\nimport { Percent } from './fractions/percent'\nimport { Price } from './fractions/price'\nimport { TokenAmount } from './fractions/tokenAmount'\nimport { Pair } from './pair'\nimport { Route } from './route'\nimport { currencyEquals, Token, WETH } from './token'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nfunction computePriceImpact(midPrice: Price, inputAmount: CurrencyAmount, outputAmount: CurrencyAmount): Percent {\n  const exactQuote = midPrice.raw.multiply(inputAmount.raw)\n  // calculate slippage := (exactQuote - outputAmount) / exactQuote\n  const slippage = exactQuote.subtract(outputAmount.raw).divide(exactQuote)\n  return new Percent(slippage.numerator, slippage.denominator)\n}\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput {\n  readonly inputAmount: CurrencyAmount\n  readonly outputAmount: CurrencyAmount\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator(a: InputOutput, b: InputOutput): number {\n  // must have same input and output token for comparison\n  invariant(currencyEquals(a.inputAmount.currency, b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(currencyEquals(a.outputAmount.currency, b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator(a: Trade, b: Trade) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Given a currency amount and a chain ID, returns the equivalent representation as the token amount.\n * In other words, if the currency is ETHER, returns the WETH token amount for the given chain. Otherwise, returns\n * the input currency amount.\n */\nfunction wrappedAmount(currencyAmount: CurrencyAmount, chainId: ChainId): TokenAmount {\n  if (currencyAmount instanceof TokenAmount) return currencyAmount\n  if (currencyAmount.currency === ETHER) return new TokenAmount(WETH[chainId], currencyAmount.raw)\n  invariant(false, 'CURRENCY')\n}\n\nfunction wrappedCurrency(currency: Currency, chainId: ChainId): Token {\n  if (currency instanceof Token) return currency\n  if (currency === ETHER) return WETH[chainId]\n  invariant(false, 'CURRENCY')\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through.\n   */\n  public readonly route: Route\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price\n  /**\n   * The mid price after the trade executes assuming no slippage.\n   */\n  public readonly nextMidPrice: Price\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn(route: Route, amountIn: CurrencyAmount): Trade {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut(route: Route, amountOut: CurrencyAmount): Trade {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(route: Route, amount: CurrencyAmount, tradeType: TradeType) {\n    const amounts: TokenAmount[] = new Array(route.path.length)\n    const nextPairs: Pair[] = new Array(route.pairs.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(currencyEquals(amount.currency, route.input), 'INPUT')\n      amounts[0] = wrappedAmount(amount, route.chainId)\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount, nextPair] = pair.getOutputAmount(amounts[i])\n        amounts[i + 1] = outputAmount\n        nextPairs[i] = nextPair\n      }\n    } else {\n      invariant(currencyEquals(amount.currency, route.output), 'OUTPUT')\n      amounts[amounts.length - 1] = wrappedAmount(amount, route.chainId)\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount, nextPair] = pair.getInputAmount(amounts[i])\n        amounts[i - 1] = inputAmount\n        nextPairs[i - 1] = nextPair\n      }\n    }\n\n    this.route = route\n    this.tradeType = tradeType\n    this.inputAmount =\n      tradeType === TradeType.EXACT_INPUT\n        ? amount\n        : route.input === ETHER\n        ? CurrencyAmount.ether(amounts[0].raw)\n        : amounts[0]\n    this.outputAmount =\n      tradeType === TradeType.EXACT_OUTPUT\n        ? amount\n        : route.output === ETHER\n        ? CurrencyAmount.ether(amounts[amounts.length - 1].raw)\n        : amounts[amounts.length - 1]\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.raw,\n      this.outputAmount.raw\n    )\n    this.nextMidPrice = Price.fromRoute(new Route(nextPairs, route.input))\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.raw).quotient\n      return this.outputAmount instanceof TokenAmount\n        ? new TokenAmount(this.outputAmount.token, slippageAdjustedAmountOut)\n        : CurrencyAmount.ether(slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.raw).quotient\n      return this.inputAmount instanceof TokenAmount\n        ? new TokenAmount(this.inputAmount.token, slippageAdjustedAmountIn)\n        : CurrencyAmount.ether(slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount,\n    currencyOut: Currency,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountIn: CurrencyAmount = currencyAmountIn,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountIn === currencyAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountIn instanceof TokenAmount\n        ? currencyAmountIn.token.chainId\n        : currencyOut instanceof Token\n        ? currencyOut.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountIn = wrappedAmount(currencyAmountIn, chainId)\n    const tokenOut = wrappedCurrency(currencyOut, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.token) && !pair.token1.equals(amountIn.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: TokenAmount\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.token.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], originalAmountIn.currency, currencyOut),\n            originalAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          amountOut,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          originalAmountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param currencyAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param originalAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut(\n    pairs: Pair[],\n    currencyIn: Currency,\n    currencyAmountOut: CurrencyAmount,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    originalAmountOut: CurrencyAmount = currencyAmountOut,\n    bestTrades: Trade[] = []\n  ): Trade[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(originalAmountOut === currencyAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n    const chainId: ChainId | undefined =\n      currencyAmountOut instanceof TokenAmount\n        ? currencyAmountOut.token.chainId\n        : currencyIn instanceof Token\n        ? currencyIn.chainId\n        : undefined\n    invariant(chainId !== undefined, 'CHAIN_ID')\n\n    const amountOut = wrappedAmount(currencyAmountOut, chainId)\n    const tokenIn = wrappedCurrency(currencyIn, chainId)\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.token) && !pair.token1.equals(amountOut.token)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: TokenAmount\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.token.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, originalAmountOut.currency),\n            originalAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          amountIn,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          originalAmountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","import { TradeType } from './constants'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './utils'\nimport { CurrencyAmount, ETHER, Percent, Trade } from './entities'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nfunction toHex(currencyAmount: CurrencyAmount) {\n  return `0x${currencyAmount.raw.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(trade: Trade, options: TradeOptions | TradeOptionsDeadline): SwapParameters {\n    const etherIn = trade.inputAmount.currency === ETHER\n    const etherOut = trade.outputAmount.currency === ETHER\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map(token => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getNetwork } from '@ethersproject/networks'\nimport { getDefaultProvider } from '@ethersproject/providers'\nimport { TokenAmount } from './entities/fractions/tokenAmount'\nimport { Pair } from './entities/pair'\nimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport invariant from 'tiny-invariant'\nimport ERC20 from './abis/ERC20.json'\nimport { ChainId } from './constants'\nimport { Token } from './entities/token'\n\nlet TOKEN_DECIMALS_CACHE: { [chainId: number]: { [address: string]: number } } = {\n  [ChainId.MAINNET]: {\n    '0xE0B7927c4aF23765Cb51314A0E0521A9645F0E2A': 9 // DGD\n  }\n}\n\n/**\n * Contains methods for constructing instances of pairs and tokens from on-chain data.\n */\nexport abstract class Fetcher {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n\n  /**\n   * Fetch information for a given token on the given chain, using the given ethers provider.\n   * @param chainId chain of the token\n   * @param address address of the token on the chain\n   * @param provider provider used to fetch the token\n   * @param symbol optional symbol of the token\n   * @param name optional name of the token\n   */\n  public static async fetchTokenData(\n    chainId: ChainId,\n    address: string,\n    provider = getDefaultProvider(getNetwork(chainId)),\n    symbol?: string,\n    name?: string\n  ): Promise<Token> {\n    const parsedDecimals =\n      typeof TOKEN_DECIMALS_CACHE?.[chainId]?.[address] === 'number'\n        ? TOKEN_DECIMALS_CACHE[chainId][address]\n        : await new Contract(address, ERC20, provider).decimals().then((decimals: number): number => {\n            TOKEN_DECIMALS_CACHE = {\n              ...TOKEN_DECIMALS_CACHE,\n              [chainId]: {\n                ...TOKEN_DECIMALS_CACHE?.[chainId],\n                [address]: decimals\n              }\n            }\n            return decimals\n          })\n    return new Token(chainId, address, parsedDecimals, symbol, name)\n  }\n\n  /**\n   * Fetches information about a pair and constructs a pair from the given two tokens.\n   * @param tokenA first token\n   * @param tokenB second token\n   * @param provider the provider to use to fetch the data\n   */\n  public static async fetchPairData(\n    tokenA: Token,\n    tokenB: Token,\n    provider = getDefaultProvider(getNetwork(tokenA.chainId))\n  ): Promise<Pair> {\n    invariant(tokenA.chainId === tokenB.chainId, 'CHAIN_ID')\n    const address = Pair.getAddress(tokenA, tokenB)\n    const [reserves0, reserves1] = await new Contract(address, IUniswapV2Pair.abi, provider).getReserves()\n    const balances = tokenA.sortsBefore(tokenB) ? [reserves0, reserves1] : [reserves1, reserves0]\n    return new Pair(new TokenAmount(tokenA, balances[0]), new TokenAmount(tokenB, balances[1]))\n  }\n}\n"],"names":["ChainId","TradeType","Rounding","INIT_CODE_HASH","SHIBA_CODE_HASH","SUSHI_FACTORY_ADDRESS","MAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","FANTOM","FANTOM_TESTNET","MATIC","MATIC_TESTNET","XDAI","BSC","BSC_TESTNET","ARBITRUM","MOONBASE","AVALANCHE","FUJI","HECO","HECO_TESTNET","HARMONY","HARMONY_TESTNET","PUPPYNET","SHIBASWAP_FACTORY_ADDRESS","SHIBASWAP_ROUTER_ADDRESS","SHIBASWAP_BONE_TOKEN_ADDRESS","SHIBASWAP_BURY_BONE_ADDRESS","SHIBASWAP_BURY_LEASH_ADDRESS","SHIBASWAP_BURY_SHIB_ADDRESS","BONE_LOCKER_ADDRESS","SHIBASWAP_TOPDOG_ADDRESS","SHIBASWAP_UNI_FETCH_ADDRESS","SHIBASWAP_SUSHI_FETCH_ADDRESS","SHIBA_DASHBOARD_1_ADDRESS","SHIBA_DASHBOARD_2_ADDRESS","SHIBASWAP_SHIB_TOKEN_ADDRESS","SHIBASWAP_LEASH_TOKEN_ADDRESS","SHIBASWAP_TIMELOCK_ADDRESS","SHIBA_BORING_HELPER_ADDRESS","MINIMUM_LIQUIDITY","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","xSHIB_BONE_MERKLE_DISTRIBUTOR_ADDRESS","xLEASH_BONE_MERKLE_DISTRIBUTOR_ADDRESS","xSHIB_WETH_MERKLE_DISTRIBUTOR_ADDRESS","WBTC_MERKLE_DISTRIBUTOR_ADDRESS","USDT_MERKLE_DISTRIBUTOR_ADDRESS","USDC_MERKLE_DISTRIBUTOR_ADDRESS","DAI_MERKLE_DISTRIBUTOR_ADDRESS","tBONE_BONE_MERKLE_DISTRIBUTOR_ADDRESS","XFUND_MERKLE_DISTRIBUTOR_ADDRESS","PERL_MERKLE_DISTRIBUTOR_ADDRESS","F9_MERKLE_DISTRIBUTOR_ADDRESS","RYOSHIS_MERKLE_DISTRIBUTOR_ADDRESS","ZIG_MERKLE_DISTRIBUTOR_ADDRESS","CIV_MERKLE_DISTRIBUTOR_ADDRESS","BASIC_BONE_REWARDS_MERKLE_DISTRIBUTOR","VEMP_MERKLE_DISTRIBUTOR_ADDRESS","UFO_MERKLE_DISTRIBUTOR_ADDRESS","ARCHIEVE_MERKLE_DISTRIBUTOR_ADDRESS","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","name","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","validateSolidityTypeInstance","value","solidityType","greaterThanOrEqual","invariant","lessThanOrEqual","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","parseBigintIsh","bigintIsh","toString","sqrt","y","z","x","greaterThan","add","divide","lessThan","notEqual","sortedInsert","items","maxSize","comparator","length","push","isFull","lo","hi","mid","splice","pop","Currency","decimals","symbol","getNativeCurrency","chainId","NATIVE","getNativeCurrencySymbol","nativeCurrency","getNativeCurrencyName","getSymbol","getName","ETHER","FTM","BNB","GLMR","AVAX","HT","BONE","Token","equals","other","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","WETH","USDC","USDT","WBTC","DAI","SHIBA_INU","LEASH","UNISWAP_TOKEN","SUSHI_TOKEN","LINK_TOKEN","XFUND_TOKEN","SNX_TOKEN","GRT_TOKEN","MEME_TOKEN","ELON_TOKEN","DUCK_TOKEN","VXV_TOKEN","PERL_TOKEN","F9_TOKEN","ZIG_TOKEN","RYOSHIS_TOKEN","CIV_TOKEN","VEMP_TOKEN","UFO_TOKEN","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","invert","otherParsed","equal","multiply","subtract","equalTo","toSignificant","significantDigits","format","rounding","groupSeparator","Number","isInteger","set","precision","quotient","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","amount","parsedAmount","exponentiate","ether","raw","toExact","TokenAmount","token","Price","baseCurrency","quoteCurrency","scalar","fromRoute","route","prices","pairs","entries","i","pair","path","token0","reserve0","reserve1","slice","reduce","accumulator","currentValue","fraction","quote","currencyAmount","adjusted","PAIR_ADDRESS_CACHE","Pair","tokenAmountA","tokenAmountB","tokenAmounts","liquidityToken","tokenA","tokenB","tokens","undefined","getCreate2Address","keccak256","pack","involvesToken","token1","priceOf","token0Price","token1Price","reserveOf","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","Route","input","output","every","currentInput","midPrice","_100_PERCENT","Percent","computePriceImpact","exactQuote","slippage","inputOutputComparator","a","b","tradeComparator","ioComp","priceImpact","wrappedAmount","wrappedCurrency","Trade","tradeType","amounts","Array","nextPairs","EXACT_INPUT","nextPair","EXACT_OUTPUT","executionPrice","nextMidPrice","exactIn","amountIn","exactOut","amountOut","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","originalAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","bestTradeExactOut","currencyIn","currencyAmountOut","originalAmountOut","tokenIn","isInsufficientReservesError","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","to","recipient","allowedSlippage","map","deadline","Math","floor","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","args","TOKEN_DECIMALS_CACHE","Fetcher","fetchTokenData","provider","parsedDecimals","getDefaultProvider","getNetwork","Contract","ERC20","then","fetchPairData","IUniswapV2Pair","abi","getReserves","reserves0","reserves1","balances"],"mappings":"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"}